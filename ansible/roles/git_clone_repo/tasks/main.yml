---

# NOTE:
# There are some tasks that are not idempotent.
# When it is re-executed, it behaves the same as the first execution.
# It is better to skip the task if necessary, but basically it is assumed that it will be executed only once, so the response will be postponed once.

- name: check if ssh key exists
  ansible.builtin.stat:
    path: "~/.ssh/{{ ssh_key_name_for_accessing_github }}"
  register: is_ssh_key

- name: generate ssh key for accessing github
  ansible.builtin.command: "ssh-keygen -t rsa -f ~/.ssh/{{ ssh_key_name_for_accessing_github }} -N ''"
  when: not is_ssh_key.stat.exists

- name: get key content
  ansible.builtin.command: "cat ~/.ssh/{{ ssh_key_name_for_accessing_github }}.pub"
  register: key_content

- name: check if known_hosts exist
  ansible.builtin.stat:
    path: "~/.ssh/known_hosts"
  register: is_known_hosts

- name: create known_hosts if it doesn't exist
  ansible.builtin.file:
    path: "~/.ssh/known_hosts"
    state: touch
  when: not is_known_hosts.stat.exists

- name: get the content of known hosts
  ansible.builtin.command: "cat ~/.ssh/known_hosts | grep github.com"
  register: is_known_hosts_content
  failed_when: is_known_hosts_content.rc > 1

- name: edit known hosts
  block:
    - name: fetch gihtub public key
      ansible.builtin.command: ssh-keyscan -T 10 github.com
      register: keyscan

    - name: add github public key to ssh known_hosts
      ansible.builtin.lineinfile:
        path: "~/.ssh/known_hosts"
        create: true
        line: "{{ item }}"
      with_items: '{{ keyscan.stdout_lines }}'
  when: is_known_hosts_content.rc == 1

- name: add ssh public key to github account
  ansible.builtin.uri:
    url: https://api.github.com/user/keys
    validate_certs: false
    method: POST
    body:
      title: "{{ ssh_key_name_for_accessing_github }}"
      key: "{{ key_content.stdout }}"
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "token {{ github_access_token }}"
    status_code: 201
  register: add_ssh_public_key_log

- name: create a directory if it doesn't exist
  ansible.builtin.file:
    path: "/home/{{ ssh_user_name }}/{{ application_directory_name }}"
    state: directory
    mode: 0755
    owner: "{{ ssh_user_name }}"
    group: "{{ ssh_user_name }}"
  become: true

- name: check if git repository exist
  ansible.builtin.stat:
    path: "/home/{{ ssh_user_name }}/{{ application_directory_name }}/{{ git_repository_name_for_cloning }}"
  register: is_git_repository

- name: clone a repository
  ansible.builtin.shell: GIT_SSH_COMMAND="ssh -i ~/.ssh/{{ ssh_key_name_for_accessing_github }} -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" git clone ssh://git@github.com/{{ git_repository_name_for_cloning }}.git /home/{{ ssh_user_name }}/{{ application_directory_name }}/
  when: not is_git_repository.stat.exists
